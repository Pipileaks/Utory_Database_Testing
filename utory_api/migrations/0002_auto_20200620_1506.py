# Generated by Django 3.0.7 on 2020-06-20 15:06

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('utory_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achivements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('name', models.CharField(max_length=56)),
                ('description', models.CharField(max_length=128)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Achivements',
                'db_table': 'Achivements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('userid', models.IntegerField(db_column='userId')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'AppRating',
                'db_table': 'app_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Errors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('userid', models.IntegerField(db_column='userId')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('error', models.CharField(max_length=1024)),
                ('layer', models.CharField(max_length=1024)),
            ],
            options={
                'verbose_name_plural': 'Errors',
                'db_table': 'Errors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayedStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('storyid', models.IntegerField(blank=True, db_column='storyId', null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('successful', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('physicalhealth', models.IntegerField(blank=True, db_column='physicalHealth', null=True)),
                ('mentalhealth', models.IntegerField(blank=True, db_column='mentalHealth', null=True)),
                ('rollcount', models.IntegerField(blank=True, db_column='rollCount', null=True)),
            ],
            options={
                'verbose_name_plural': 'PlayedStory',
                'db_table': 'played_story',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(max_length=64)),
                ('username', models.CharField(db_column='userName', max_length=32)),
                ('userid', models.CharField(db_column='userId', max_length=64)),
                ('totalpage', models.IntegerField(blank=True, db_column='totalPage', null=True)),
                ('difficulty', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=16, null=True)),
                ('genre', models.CharField(blank=True, max_length=32, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('playcount', models.IntegerField(blank=True, db_column='playCount', null=True)),
                ('datepublish', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Stories',
                'db_table': 'Stories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoryContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64)),
                ('pagenumber', models.IntegerField()),
                ('bodytext', models.CharField(blank=True, db_column='bodyText', max_length=1024, null=True)),
                ('phytext', models.CharField(blank=True, db_column='phyText', max_length=512, null=True)),
                ('mnttext', models.CharField(blank=True, db_column='mntText', max_length=512, null=True)),
                ('failend', models.CharField(blank=True, db_column='failEnd', max_length=512, null=True)),
                ('introcheck', models.IntegerField(blank=True, db_column='introCheck', null=True)),
                ('storyintro', models.CharField(blank=True, db_column='storyIntro', max_length=512, null=True)),
                ('sucend', models.CharField(blank=True, db_column='sucEnd', max_length=512, null=True)),
                ('pstr', models.BooleanField(blank=True, db_column='pStr', null=True)),
                ('mstr', models.BooleanField(blank=True, db_column='mStr', null=True)),
                ('pcon', models.BooleanField(blank=True, db_column='pCon', null=True)),
                ('mcon', models.BooleanField(blank=True, db_column='mCon', null=True)),
                ('pdex', models.BooleanField(blank=True, db_column='pDex', null=True)),
                ('mdex', models.BooleanField(blank=True, db_column='mDex', null=True)),
                ('pint', models.BooleanField(blank=True, db_column='pInt', null=True)),
                ('mint', models.BooleanField(blank=True, db_column='mInt', null=True)),
                ('pwis', models.BooleanField(blank=True, db_column='pWis', null=True)),
                ('mwis', models.BooleanField(blank=True, db_column='mWis', null=True)),
                ('pcha', models.BooleanField(blank=True, db_column='pCha', null=True)),
                ('mcha', models.BooleanField(blank=True, db_column='mCha', null=True)),
            ],
            options={
                'verbose_name_plural': 'StoryContent',
                'db_table': 'story_content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storyid', models.IntegerField(blank=True, db_column='storyId', null=True)),
                ('roleid', models.IntegerField(db_column='roleId')),
                ('revnote', models.CharField(blank=True, db_column='revNote', max_length=512, null=True)),
                ('deletenote', models.CharField(blank=True, db_column='deleteNote', max_length=512, null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name_plural': 'StoryHistory',
                'db_table': 'story_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoryStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('roleid', models.IntegerField(blank=True, db_column='roleId', null=True)),
                ('published', models.BooleanField(blank=True, default=False, null=True)),
                ('approved', models.BooleanField(blank=True, default=False, null=True)),
                ('review', models.BooleanField(blank=True, default=False, null=True)),
                ('seen', models.BooleanField(blank=True, default=False, null=True)),
                ('resuming', models.BooleanField(blank=True, default=False, null=True)),
                ('trash', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'verbose_name_plural': 'StoryStatus',
                'db_table': 'story_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('email', models.CharField(max_length=64)),
                ('signedfacebook', models.IntegerField(blank=True, db_column='signedFacebook', null=True)),
                ('signedgoogle', models.IntegerField(blank=True, db_column='signedGoogle', null=True)),
                ('signedtwitter', models.IntegerField(blank=True, db_column='signedTwitter', null=True)),
                ('signedemail', models.IntegerField(blank=True, db_column='signedEmail', null=True)),
                ('subdate', models.DateTimeField(db_column='subDate', default=django.utils.timezone.now)),
                ('tutorialdone', models.IntegerField(blank=True, db_column='tutorialDone', null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('lastlogin', models.DateTimeField(db_column='lastLogin', default=django.utils.timezone.now)),
                ('language', models.CharField(blank=True, max_length=16, null=True)),
                ('pushedallowed', models.IntegerField(blank=True, db_column='pushedAllowed', null=True)),
                ('premium', models.IntegerField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('roleid', models.IntegerField(db_column='roleId')),
                ('role', models.CharField(max_length=48)),
                ('roledate', models.DateTimeField(db_column='roleDate', default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'UserStatus',
                'db_table': 'user_status',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Createstory',
        ),
    ]
